databases:
    codeImageDB: encodedCommand + Ptr in data(codeImagePtr) - encoded 32 bit code operation
    dataImageDB: char * (will be changed to something else) + Ptr in data(dataImagePtr) - encoded byte of data
    entryCallsDB: entryCall + Ptr in data - information fields about entry definition location + the line it was declared as entry
    externUsesDB: externUse + Ptr in data(externUsePtr) - name and IC of extern label used
    labelsCallsDB: labelCall(in global.h), labelCallNode(in DB) + Ptr in global.h - need to merge with entryCall
    labelsDB: label + Ptr in global.h - need to merge with labelCalls and entryCalls somehow
    operationsDB: operation + Ptr in global.h operation encoding data - maybe remove from general databases struct
    databaseRouter - stores database pointer

codeLineData: rTypeData + iTypeData + jTypeData - used in codeImageDB, operationsDB, firstPass

operandAttributes - union of (reg pointer \ immediate value pointer) + label char array + boolean isLabel(check if label should be inside union)


defined in firstPass.c:
    labelAttributes + Ptr - name + labelUsed boolean + class of label - maybe merge with other label structures
    operationAttributes + Ptr - relevant operation identifiers, excluding operands data
    lineAttributes + Ptr - current input line identifiers - line array + counter, IC + DC pointers

